---
layout: post
title:  "Python 기본 ①"
date:   2017-08-22 15:28:23 +0700
categories: [python]
---

{% highlight python %}
# -*- coding: utf-8 -*-
{% endhighlight %}
- 로마자 외에 다른 문자를 섞어 사용하여 ASCII 인코딩 오류가 날 때, 위 내용을 코드 맨 위에 추가
- `#`가 주석에 쓰이는 문자인데, 위 코드는 어떻게 동작하는 것일까?
    - 파이썬은 윗 줄도 코드로 인식하지 않는다.
    - 파일의 포맷 설정을 찾아내는 `해킹`이나 대안해법(workaround) 가운데 한 방법으로 사용함.

---

#### `=` 와 `==`의 차이점
- `=` → 오른쪽의 값을 왼쪽의 변수에 대입
- `==` → 양쪽의 값이 같은지 비교

---

### 문자열과 출력

{% highlight python %}
# -*- coding: utf-8 -*-

my_name = 'alpha'
my_age = 32
my_height = 175
my_weight = 73
my_eyes = '블랙'
my_teeth = '하양'
my_hair = '브라운'

print("%s에 대해 이야기해 보죠" % my_name)
print("키는 %d cm 이고요" % my_height)
print("몸무게는 %d kg 이에요." % my_weight)
print("사실 아주 많이 나가는 건 아니죠")
print("눈은 %s이고 머리는 %s이에요" % (my_eyes, my_hair))
print("이는 보통 %s이고 커피를 먹으면 달라져요" % my_teeth)
{% endhighlight %}
- 위의 결과값은 아래와 같다.

```
alpha에 대해 이야기해 보죠
키는 175 cm 이고요
몸무게는 73 kg 이에요.
사실 아주 많이 나가는 건 아니죠
눈은 블랙이고 머리는 브라운이에요
이는 보통 하양이고 커피를 먹으면 달라져요
```

| 코드(포매터) | 설명 |
| :--- | :--- |
| %s | 문자열 (String) |
| %c | 문자 1개(character) |
| %d | 정수 (Integer) |
| %f | 부동소수 (floating-point) |
| %o | 8진수 |
| %x | 16진수 |
| %r | 무엇이든 출력 |
| %% | Literal % (문자 `%` 자체) |

---

#### 아래 format문을 활용하면 보다 편리하게 위와 동일한 결과를 뽑아낼 수 있다.

{% highlight python %}
# -*- coding: utf-8 -*-

my_name = 'alpha'
my_age = 32
my_height = 175
my_weight = 73
my_eyes = '블랙'
my_teeth = '하양'
my_hair = '브라운'

print("{}에 대해 이야기해 보죠".format(my_name))
print("키는 {} cm 이고요".format(my_height))
print("몸무게는 {} kg 이에요.".format(my_weight))
print("사실 아주 많이 나가는 건 아니죠")
print("눈은 {}이고 머리는 {}이에요".format(my_eyes, my_hair))
print("이는 보통 {}이고 커피를 먹으면 달라져요".format(my_teeth))
{% endhighlight %}
- format문을 사용하면 더 편리하다.

---

#### 문자열, 변수, 포맷을 전부 입력하고 출력해보자.
- 짧게 축약된 변수 이름도 연습해보자.
{% highlight python %}
# -*- coding: utf-8 -*-

x = "세상에는 %d 종류의 사람이 있어요." % 10
binary = "'이진수'"
do_not = "모르는"
y = "%s를 아는 사람과 %s 사람." % (binary, do_not)
z = 'How fun is it!'

print(x)
print(y)
print(z)

print("'%s'라고 했어요." % x)
print("'%s'이라고도 했죠." % y)
print("So, %r" % z)

hilarious = False
joke_evaluation = "웃기는 농담 아니에요?! %r"

print( joke_evaluation % hilarious)

w = "이 문자열의 왼쪽 ->"
e = "<- 이 문자열의 오른쪽"

print(w + e)
{% endhighlight %}

- 출력 결과
```
세상에는 10 종류의 사람이 있어요.
'이진수'를 아는 사람과 모르는 사람.
How fun is it!
'세상에는 10 종류의 사람이 있어요.'라고 했어요.
''이진수'를 아는 사람과 모르는 사람.'이라고도 했죠.
So, 'How fun is it!'
웃기는 농담 아니에요?! False
이 문자열의 왼쪽 -><- 이 문자열의 오른쪽
```
- 문자열 안에 다른 문자열을 넣을 때, 위 코드처럼 변수로 한 번 받고 문자열로 다시 넣어주면 된다.

---

#### format문을 활용하여 동일한 결과를 출력해보자.

{% highlight python %}
# -*- coding: utf-8 -*-

x = "세상에는 {} 종류의 사람이 있어요.".format(10)
binary = "'이진수'"
do_not = "모르는"
y = "{}를 아는 사람과 {} 사람.".format(binary, do_not)
z = 'How fun is it!'

print(x)
print(y)
print(z)

print("'{}'라고 했어요.".format(x))
print("'{}'이라고도 했죠.".format(y))
print("So, {}".format(z))

hilarious = False
joke_evaluation = "웃기는 농담 아니에요?! {}"

print( joke_evaluation.format(hilarious))

w = "이 문자열의 왼쪽 ->"
e = "<- 이 문자열의 오른쪽"

print(w + e)
{% endhighlight %}

---

#### Print문
{% highlight python %}
# -*- coding: utf-8 -*-

print("마리에겐 꼬마 양이 있지.")
print("양털은 %s처럼 새하얗네." % '눈')
print("그리고 마리가 가는 곳마다.")
print("." * 10)

end1 = "맛"
end2 = "있"
end3 = "는"
end4 = "치"
end5 = "즈"
end6 = "버"
end7 = "거"

print(end1 + end2 + end3, end=' ')
print(end4 + end5 + end6 + end7)
{% endhighlight %}

```
마리에겐 꼬마 양이 있지.
양털은 눈처럼 새하얗네.
그리고 마리가 가는 곳마다.
..........
맛있는 치즈버거
```
- `end=' '`를 사용하여 `맛있는 치즈버거`가 줄 바꿈이 되지 않도록 하였다.
    - `print`는 default로 `\n`이 되어 있다.
    - `print` 출력값이 줄 바꿈을 하지 않기 위해서 `end=''`를 사용함.

##### 참고
{% highlight python %}
# -*- coding: utf-8 -*-

print("마리에겐 꼬마 양이 있지.")
print("양털은 %s처럼 새하얗네." % '눈')
print("그리고 마리가 가는 곳마다.")
print("." * 10)

end1 = "맛"
end2 = "있"
end3 = "는"
end4 = "치"
end5 = "즈"
end6 = "버"
end7 = "거"

print(end1 + end2 + end3)
print(end4 + end5 + end6 + end7)
{% endhighlight %}
```
마리에겐 꼬마 양이 있지.
양털은 눈처럼 새하얗네.
그리고 마리가 가는 곳마다.
..........
맛있는
치즈버거
```

##### 아래와 같이 print문을 사용할 수 있다.
{% highlight python %}
print(end1 + end2 + end3, end4 + end5 + end6 + end7)
{% endhighlight %}
- 하지만 `Python`에서는 1라인이 80줄을 넘는 것을 권장하지 않는다.
- 그러므로 `end=' '`를 사용함.

---

#### `%s`, `%r`, `format 문`
{% highlight python %}
# -*- coding: utf-8 -*-

formatter = "%s %s %s %s"

print(formatter % (1, 2, 3, 4))
print(formatter % ("하나", "둘", "셋", "넷"))
print(formatter % (True, False, False, True))
print(formatter % (formatter, formatter, formatter, formatter))
print(formatter % (
    "난 이게 있죠",
    "지금 막 써 주신 그것.",
    "하지만 '노래'하진 않아요.",
    "그러니까 잘 자요."
    )
)

formatter2 = "%r %r %r %r"
print(formatter2 % (
    "I had this thing.",
    "That you could type up right.",
    "But it didn't sing",
    "So I said goodnight."
    )
)
{% endhighlight %}

```
1 2 3 4
하나 둘 셋 넷
True False False True
%s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s
난 이게 있죠 지금 막 써 주신 그것. 하지만 '노래'하진 않아요. 그러니까 잘 자요.
'I had this thing.' 'That you could type up right.' "But it didn't sing" 'So I said goodnight.'
```
- formatter를 `%s`에서 `%r`로 바꾸었더니, 마지막 출력이 따옴표가 다르게 출력됨을 확인할 수 있다.

{% highlight python %}
# -*- coding: utf-8 -*-

formatter = "%s %s %s %s"

print(formatter % (1, 2, 3, 4))
print(formatter % ("하나", "둘", "셋", "넷"))
print(formatter % (True, False, False, True))
print(formatter % (formatter, formatter, formatter, formatter))
print(formatter % (
    "난 이게 있죠",
    "지금 막 써 주신 그것.",
    "하지만 '노래'하진 않아요.",
    "그러니까 잘 자요."
    )
)

formatter2 = "%s %s %s %s"
print(formatter2 % (
    "I had this thing.",
    "That you could type up right.",
    "But it didn't sing",
    "So I said goodnight."
    )
)
{% endhighlight %}
```
1 2 3 4
하나 둘 셋 넷
True False False True
%s %s %s %s %s %s %s %s %s %s %s %s %s %s %s %s
난 이게 있죠 지금 막 써 주신 그것. 하지만 '노래'하진 않아요. 그러니까 잘 자요.
I had this thing. That you could type up right. But it didn't sing So I said goodnight.
```
- formatter를 `%s`로 변경했더니, 따옴표가 출력되지 않음을 확인할 수 있다.

{% highlight python %}
# -*- coding: utf-8 -*-

formatter = "{} {} {} {}"

print(formatter.format(1, 2, 3, 4))
print(formatter.format("하나", "둘", "셋", "넷"))
print(formatter.format(True, False, False, True))
print(formatter.format(formatter, formatter, formatter, formatter))
print(formatter.format(
    "난 이게 있죠",
    "지금 막 써 주신 그것.",
    "하지만 '노래'하진 않아요.",
    "그러니까 잘 자요."
    )
)

formatter2 = "{} {} {} {}"
print(formatter2.format(
    "I had this thing.",
    "That you could type up right.",
    "But it didn't sing",
    "So I said goodnight."
    )
)
{% endhighlight %}
- `format`을 활용하니 위의 결과와 동일하게 나오는 것을 확인했다.
- `format 문`을 활용하여 문자열안에 문자를 넣도록 하자.

#### ※ 그렇다면 `%r`은 언제 사용할까?
- 디버그 정보를 얻기 위해서만 써야한다.

---

{% highlight python %}
# -*- coding: utf-8 -*-

days = "월 화 수 목 금 토 일"
months = "\n1월\n2월\n3월\n4월\n5월\n6월\n7월\n8월"

print("요일 목록: ", days)
print("월 목록: ", months)
print('''
여기 무언가가 있어요.
세 개의 작은따옴표 안에요.
쓰고 싶은 만큼 쓸 수 있어요.
4줄이든, 5줄이든, 6줄이든 원하는 만큼.
'''
)
{% endhighlight %}
- `\n` : 줄 바꿈
- `''' '''` 멀티 라인 문자열

---

{% highlight python %}
# -*- coding: utf-8 -*-

tabby_cat = "\t난 탭이 됨."
persian_cat = "나는\n분리됨."
backslash_cat = "나는 \\ 고 \\ 양이."

fat_cat = """
할 일 목록:
\t* 고양이 밥
\t* 물고기
\t* 개박하\n\t* 오리새
"""

print(tabby_cat)
print(persian_cat)
print(backslash_cat)
print(fat_cat)
{% endhighlight %}

```
    난 탭이 됨.
나는
분리됨.
나는 \ 고 \ 양이.

할 일 목록:
    * 고양이 밥
    * 물고기
    * 개박하
    * 오리새
```

---

#### Escape code(탈출 순서열)

| 코드 | 설명|
| :--- | :--- |
| \n | 개행 (줄바꿈) |
| \t | 수평 탭 |
| \\\\ | 문자 "\\" |
| \\' | 단일 인용부호(') |
| \\" | 이중 인용부호(") |
| \r | 캐리지 리턴 |
| \f | 폼 피드 |
| \a | 벨 소리 |
| \b | 백 스페이스 |
| \N{name} | name이라는 이름이 붙은 문자(유니코드 전용) |
| \v | 수직 탭 |
| \uxxxx | 16비트 16진수 xxxx에 해당하는 문자(유니코드 전용) |
| \Uxxxxxxxx | 32비트 16진수 xxxxxxxx에 해당하는 문자(유니코드 전용) |
| \000 | 8진수 00에 해당하는 문자 |
| \xhh | 16진수 값 hh에 해당하는 문자 |

{% highlight python %}
while True:
    for i in ["/", "-", "|", "\\", "|"]:
        print ("{}\r".format(i), end=' ')
{% endhighlight %}
- 해보면 재밌는 코드

---

{% highlight python %}
# -*- coding: utf-8 -*-

print("몇 살이죠?", end=' ')
age = 32
print("키는 얼마죠?", end=' ')
height = 175
print("몸무게는 얼마죠?", end=' ')
weight = 72

print("네, 나이는 {}살, 키는 {}, 몸무게는 {}이네요.".format(age, height, weight))
print("뜬금없지만, 태양의 각지름은 {} 정도입니다.".format('''32\'10"'''))
{% endhighlight %}
```
몇 살이죠? 키는 얼마죠? 몸무게는 얼마죠? 네, 나이는 32살, 키는 175, 몸무게는 72이네요.
뜬금없지만, 태양의 각지름은 32'10" 정도입니다.
```
- 데이터를 입력받아서 포맷문과 escape code와 함께 사용하면 위처럼 결과를 얻을 수 있다.
- `'''32\'10"'''` 작은 따옴표가 겹치므로, 겹치지 않게 `\`를 함께 써줘야 한다.
- 또한 문자열 안에서 `'`, `"`를 출력하기 위해서는 앞에 역슬래쉬를 함께 사용해야 한다.

---


**Reference:**
- 깐깐하게 배우는 파이썬
